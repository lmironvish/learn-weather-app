(()=>{"use strict";const e="9DTCaL30eScb2kysS7NmwwRL6OnzrChP",t=document.querySelector("form"),s=document.querySelector(".card"),c=document.querySelector(".details"),a=document.querySelector("img.time"),n=document.querySelector(".icon img");t.addEventListener("submit",(i=>{i.preventDefault();const r=t.city.value.trim();t.reset(),(async t=>{const s=await(async t=>{const s=`?apikey=${e}&q=${t}`,c=await fetch("http://dataservice.accuweather.com/locations/v1/cities/search"+s);return(await c.json())[0]})(t);return{cityDets:s,weather:await(async t=>{const s=`${t}?apikey=${e}`,c=await fetch("http://dataservice.accuweather.com/currentconditions/v1/"+s);return(await c.json())[0]})(s.Key)}})(r).then((e=>(e=>{const{cityDets:t,weather:i}=e;c.innerHTML=`\n  <div class="text-muted text-uppercase text-center details">\n            <h5 class="my-3">${t.EnglishName}</h5>\n            <div class="my-3">${i.WeatherText}</div>\n            <div class="display-4 my-4">\n              <span>${i.Temperature.Metric.Value}</span>\n              <span>&deg;C</span>\n            </div>\n  `;const r=`img/icons/${i.WeatherIcon}.svg`;n.setAttribute("src",r);let o=i.IsDayTime?"img/day.svg":"img/night.svg";a.setAttribute("src",o),s.classList.contains("d-none")&&s.classList.remove("d-none")})(e))).catch((e=>console.log(e)))}))})();